/* 1007. Code Words - http://acm.timus.ru/problem.aspx?num=1007
 *
 * Strategy:
 * The length of the code word determines the nature of its corruption, so each case is handled
 * separately. The algorithms are straightforward and fast by using the fact that removing a digit 
 * from a keyword reduces its checksum by the number of ones to the right of it (together with the 
 * effect of the removed digit), and the opposite if we add a digit.
 *
 * Performance:
 * Linear in the size of the input; runs the test cases in 0.015s using 192KB of memory.
 */


#include <iostream>
#include <string>
using namespace std;

// Функция для вычисления контрольной суммы
int calculateChecksum(const string& s) {
    int sum = 0;
    for (char c : s) {
        sum += c - '0';
    }
    return sum % 10;
}

// Основная функция для решения задачи
void solve(string codeWord) {
    // Вычисляем длину кодового слова
    int n = codeWord.size();
    
    // Если длина равна 4, то добавим недостающую цифру
    if (n == 4) {
        int checksum = calculateChecksum(codeWord);
        cout << codeWord + to_string(checksum) << endl;
        
    // Если длина равна 6, то удаляем одну лишнюю цифру
    } else if (n == 6) {
        int originalSum = calculateChecksum(codeWord.substr(0, 5));
        int modifiedSum = calculateChecksum(codeWord.substr(1, 5));
        
        if (originalSum != modifiedSum) {
            cout << codeWord.substr(1, 5) << endl;
        } else {
            cout << codeWord.substr(0, 5) << endl;
        }
        
    // Если длина равна 8, то добавляем две цифры
    } else if (n == 8) {
        int checksum1 = calculateChecksum(codeWord.substr(0, 4));
        int checksum2 = calculateChecksum(codeWord.substr(4, 4));
        
        cout << codeWord.substr(0, 4) + to_string(checksum1) + codeWord.substr(4, 4) + to_string(checksum2) << endl;
    }
}

int main() {
    ios::sync_with_stdio(false); // Для ускорения ввода-вывода
    cin.tie(nullptr); // Отключаем буферизацию

    int t;
    cin >> t;
    
    while (t--) {
        string codeWord;
        cin >> codeWord;
        solve(codeWord);
    }
    
    return 0;
}
